Rationale
=========

Active learning is...

    ... the subset of machine learning in which a learning algorithm can query a user interactively to
    label data with the desired outputs. In active learning, the algorithm proactively selects the subset of examples to
    be labeled next from the pool of unlabeled data. The fundamental belief behind the active learner algorithm concept
    is that an ML algorithm could potentially reach a higher level of accuracy while using a smaller number of training
    labels if it were allowed to choose the data it wants to learn from.

    https://www.datarobot.com/blog/active-learning-machine-learning/


To translate this into what *MoleMarshal* will actually do, active learning will be used to optimise the time the
dermatologists who will be classifying the stamp images. We do not want them to be classifying things which are
obviously moles or which are obviously not moles.

The Zooniverse approach
-----------------------

Active learning is unfortunately not a "solved problem" and Zooniverse also does not have any streamlined mechanism in
place to easily enable active learning in a project. This means *MoleMarshal* has to take a manual approach to
implement active learning.

The approach *MoleMarshal* adopts is to sort stamps/subjects into multiple subject sets which have an appropriate
"selection weight" which modifies the chance a stamp/subject is chosen from a subject set (at random) to show to a user
to be classified. The arrangement of subjects into subject sets is done by *MoleMarshal* based on a machine confidence,
or classification confidence. The specifics of how subjects are arranged is covered in :ref:`Selection`.

Each time a stamp is generated by *MoleGazer*, it is given a confidence on whether the stamp image is of a mole. A stamp
with a high confidence should mean that it is highly likely that the stamp image is an image of a mole and not of
anything else. A low confidence will mean that *MoleGazer* was unsure what was in the stamp image. It could be a mole,
or it could be a tattoo, nipple, edge of a person or whatever else *MoleGazer* will flag as a false positive.

These low confidence stamps are those which will be preferentially shown to users to classify. With the low confidence
stamps classified first, this will rapidly improve the mole detection and classification algorithms in *MoleGazer* and
optimise the time of *MoleMarshal* users.

Machine confidence
------------------

To re-iterate, the machine confidence for a stamp is a measure of the likelihood that a stamp image contains a mole and
not a false positive. Stamps which have a high confidence are relatively unimportant in the project, as both
*MoleMarshal* and *MoleGazer* stand to gain very little from having someone manually label them in comparison to someone
labelling a low confidence stamp -- though note that it is still important that these stamps be eventually labeled to
ensure the accuracy of the *MoleGazer* algorithms.

The confidence of a stamp will be assigned by *MoleGazer* upon creation.


Future work: calculating the confidence again
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

The initial implementation of determining the confidence at creation is a good starting point. However as the model
evolves the machine confidence of a stamp will also evolve. There are no mechanisms in place which will change the
machine confidence of stamps to reflect the evolving model. *MoleMarshal* will happily re-arrange stamps/subjects into
subject sets when the subject weighting has changed.

Future work should focus on implementing a classification model in *MoleMarshal* (or *MoleGazer* if more appropriate)
which will re-evaluate the confidence of each stamp image. This would allow the active learning rate to continuously
evolve and remain up-to-date with the current *MoleGazer* mole classification and detection models.
