voidorchestra.db.lightcurve
===========================

.. py:module:: voidorchestra.db.lightcurve

.. autoapi-nested-parse::

   Defines the database object for the lightcurve.

   Uses single-table inheritance to contain multiple types of lightcurve.



Submodules
----------

.. toctree::
   :maxdepth: 1

   /autoapi/voidorchestra/db/lightcurve/file/index
   /autoapi/voidorchestra/db/lightcurve/synthetic/index


Classes
-------

.. autoapisummary::

   voidorchestra.db.lightcurve.LightcurveCollection
   voidorchestra.db.lightcurve.Lightcurve


Package Contents
----------------

.. py:class:: LightcurveCollection

   Bases: :py:obj:`voidorchestra.db.Base`


   ORM class for a collection of lightcurves in a batch.

   .. attribute:: id

      A unique ID for the QPO model.

      :type: integer

   .. attribute:: name

      A name describing the batch.

      :type: string


   .. py:attribute:: __tablename__
      :type:  str
      :value: 'lightcurve_collection'



   .. py:attribute:: id
      :type:  sqlalchemy.orm.Mapped[int]


   .. py:attribute:: name
      :type:  sqlalchemy.orm.Mapped[str]


   .. py:attribute:: lightcurves
      :type:  sqlalchemy.orm.Mapped[List[voidorchestra.db.lightcurve.Lightcurve]]


   .. py:attribute:: subject_sets
      :type:  sqlalchemy.orm.Mapped[voidorchestra.db.subject_set.SubjectSet]


   .. py:method:: __repr__() -> str


.. py:class:: Lightcurve

   Bases: :py:obj:`voidorchestra.db.Base`


   ORM class for a lightcurve.

   This class defines a type of lightcurve.
   Multiple versions exist, for synthetic, observed, or input.

   .. attribute:: id

      The lightcurve method id.

      :type: integer

   .. attribute:: polymorphic_type

      The column used for single-table polymorphism.

      :type: str

   .. attribute:: sonifications

      The sonifications generated using this lightcurve.

      :type: relationship


   .. py:attribute:: __tablename__
      :type:  str
      :value: 'lightcurve'



   .. py:attribute:: __mapper_args__
      :type:  Dict[str, str]


   .. py:attribute:: id
      :type:  sqlalchemy.orm.Mapped[int]


   .. py:attribute:: polymorphic_type
      :type:  sqlalchemy.orm.Mapped[str]


   .. py:attribute:: name
      :type:  sqlalchemy.orm.Mapped[str]


   .. py:attribute:: lightcurve_collection_id
      :type:  sqlalchemy.orm.Mapped[voidorchestra.db.lightcurve_collection.LightcurveCollection]


   .. py:attribute:: lightcurve_collection
      :type:  sqlalchemy.orm.Mapped[voidorchestra.db.lightcurve_collection.LightcurveCollection]


   .. py:attribute:: sonifications
      :type:  sqlalchemy.orm.Mapped[List[voidorchestra.db.sonification.Sonification]]


   .. py:attribute:: COLUMNS
      :type:  List[str]
      :value: ['id', 'name']



   .. py:method:: __repr__() -> str
      :abstractmethod:


      Gets the name of the lightcurve.

      :returns: The string representation of the lightcurve.
      :rtype: str



   .. py:method:: get_data(**kwargs) -> astropy.timeseries.TimeSeries
      :abstractmethod:


      Gets a table containing the lightcurve.

      :returns: The Astropy TimeSeries representing the lightcurve.
                Must have time, rate and error columns.
      :rtype: TimeSeries



